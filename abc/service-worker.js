"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["index.html","cbbdb411203655e82870ea6ede8c1fe8"],["static/css/main.78c7732d.css","2a6e89941b3026b05ed69ea604897c28"],["static/js/main.505e522a.js","337a5c8e7ee36e1eba79e2a63f5eb959"],["static/media/1.53e8c3ab.jpg","53e8c3ab735cbb33f30bbc2bef86ca40"],["static/media/2.f5473657.jpg","f54736573159227460df7461d01e5229"],["static/media/3.18ea50a7.jpg","18ea50a7f4d19b4d23dddbef34e90862"],["static/media/400.e2cf97cc.jpg","e2cf97cc93b9dcac812a5e75ea614bad"],["static/media/card1.d778b1ac.jpg","d778b1ac6bf385ac8a783a0f52447ef7"],["static/media/card3.e6b1ce80.jpg","e6b1ce80b6d12052cd4ae3050b707e5d"],["static/media/footer.1456fc1b.png","1456fc1b7ee62cdae65ec5eb212867a8"],["static/media/grid1.8c943124.jpg","8c943124ee53c153ebec62f96d7db68e"],["static/media/grid2.0ad29ef7.jpg","0ad29ef7fc8d50d59ab94b87a3dbce7d"],["static/media/grid3.2101b63f.jpg","2101b63f000ad4d8c1ade32a78deedd2"],["static/media/grid4.cfd60f4e.jpg","cfd60f4ed3385c529372fe96b08ed6fd"],["static/media/pack1.a325b611.jpg","a325b611c1b352ada6bc7b1eebcc2e8c"],["static/media/pack2.1785dd02.jpg","1785dd02bfec4a7219c8764567263373"],["static/media/packc1.984743cc.jpg","984743ccc1d6aedc567e115bdad9b462"],["static/media/packc2.be1a76c0.jpg","be1a76c05a2173b7d9a5a3572d7ff0de"],["static/media/roomc1.17464cb9.jpg","17464cb9974395ab8e924faa790e34b8"],["static/media/roomc2.866842e0.jpg","866842e0270674b267b53a733bb343cc"],["static/media/slick.b7c9e1e4.woff","b7c9e1e479de3b53f1e4e30ebac2403a"],["static/media/slick.ced611da.eot","ced611daf7709cc778da928fec876475"],["static/media/slick.d41f55a7.ttf","d41f55a78e6f49a5512878df1737e58a"],["static/media/slick.f97e3bbf.svg","f97e3bbf73254b0112091d0192f17aec"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var c=new Request(a,{credentials:"same-origin"});return fetch(c).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);t=urlsToCacheKeys.has(a);t||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});